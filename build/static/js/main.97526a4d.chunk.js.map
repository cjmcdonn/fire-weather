{"version":3,"sources":["components/Error.tsx","components/Loading.tsx","components/Conditions.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Error","react_default","a","createElement","Component","Loading","ShadedBackground","styled","div","_templateObject","Conditions","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pollingInterval","state","error","loading","temp","wind","gust","rh","time","danger","home_lat","home_lon","curr_lat","curr_lon","curr_base","curr_sta","curr_sign","pollNWS","bind","assertThisInitialized","inherits","createClass","key","value","_this2","setInterval","navigator","geolocation","getCurrentPosition","location","setState","Math","round","coords","latitude","longitude","clearInterval","_this3","fetch","concat","then","resp","json","data","properties","observationStations","url","currSignPcs","split","length","convertCtoF","temperature","convertMsToMph","windSpeed","relativeHumidity","calcDanger","moment","timestamp","calendar","catch","celcius","meter","_this4","res","status","tempF","windMPH","observationTime","_this$state","Error_Error","Loading_Loading","className","href","target","App","style","height","background","backgroundSize","overflow","components_Conditions","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.97526a4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Error extends Component {\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        <h1>Error!</h1>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\nimport styled from 'styled-components';\r\n\r\nconst ShadedBackground = styled.div`\r\n  background-color: rgba(201, 211, 184, .75);\r\n  display: inline-block;\r\n  padding: .15rem .5rem;\r\n`;\r\n\r\ninterface State {\r\n    error: boolean,\r\n    loading: boolean,\r\n    temp: number,\r\n    wind: number,\r\n    gust: number,\r\n    rh: number,\r\n    time: string,\r\n    danger: string,\r\n    home_lat: number,\r\n    home_lon: number,\r\n    curr_lat: number,\r\n    curr_lon: number,\r\n    curr_base: object,\r\n    curr_sta: string,\r\n    curr_sign: string,\r\n}\r\n\r\nexport class Conditions extends Component<any, State> {\r\n    pollingInterval = 0;\r\n\r\n    constructor(props: State) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: false,\r\n            loading: true,\r\n            temp: -999,\r\n            wind: -999,\r\n            gust: -999,\r\n            rh: -999,\r\n            time: '',\r\n            danger: 'Invalid',\r\n            home_lat: 47.3126,\r\n            home_lon: -119.5352,\r\n            curr_lat: 47.3126,\r\n            curr_lon: -119.5352,\r\n            curr_base: {},\r\n            curr_sta: '',\r\n            curr_sign: '',\r\n        };\r\n\r\n        this.pollNWS = this.pollNWS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.pollNWS();\r\n        this.pollingInterval = setInterval(this.pollNWS, 60000);\r\n\r\n        navigator.geolocation.getCurrentPosition(location => {\r\n            this.setState({\r\n                curr_lat: (Math.round(location.coords.latitude * 10000)) / 10000,\r\n                curr_lon: (Math.round(location.coords.longitude * 10000)) / 10000,\r\n            })\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        clearInterval(this.pollingInterval);\r\n        this.pollingInterval = 0;\r\n    }\r\n\r\n    pollNWS() {\r\n        fetch(`https://api.weather.gov/points/${this.state.curr_lat},${this.state.curr_lon}`)\r\n            .then(resp => resp.json()) // transform the data into json\r\n            .then(data => {\r\n                this.setState({\r\n                    curr_base: data.properties,\r\n                });\r\n                return data.properties.observationStations;\r\n            })\r\n            .then(url => {\r\n                return fetch(url)\r\n            })\r\n            .then(resp => resp.json()) // transform the data into json\r\n            .then(data => {\r\n                const curr_sta = `${data.observationStations[0]}/observations/current`;\r\n                const currSignPcs = data.observationStations[0].split('/');\r\n\r\n                this.setState({\r\n                    curr_sta: curr_sta,\r\n                    curr_sign: currSignPcs[currSignPcs.length - 1],\r\n                });\r\n\r\n                return curr_sta;\r\n            })\r\n            .then(url => {\r\n                return fetch(url)\r\n            })\r\n            .then(resp => resp.json()) // transform the data into json\r\n            .then(data => {\r\n                const temp = this.convertCtoF(data.properties.temperature.value);\r\n                const wind = this.convertMsToMph(data.properties.windSpeed.value);\r\n                const rh = Math.round(data.properties.relativeHumidity.value);\r\n                const gust = 0;\r\n                const danger = this.calcDanger(temp, wind, gust, rh);\r\n\r\n                this.setState({\r\n                    temp: temp,\r\n                    wind: wind,\r\n                    gust: gust,\r\n                    rh: rh,\r\n                    time: moment(data.properties.timestamp).calendar(),\r\n                    danger: danger,\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch(() => {\r\n                this.setState({\r\n                    error: true,\r\n                    loading: false,\r\n                });\r\n            });\r\n    }\r\n\r\n    convertCtoF(celcius: number) {\r\n        return Math.round(celcius * (9 / 5) + 32);\r\n    }\r\n\r\n    convertMsToMph(meter: number) {\r\n        return Math.round(meter * 2.23694);\r\n    }\r\n\r\n    calcDanger(temp: number, wind: number, gust: number, rh: number) {\r\n        if (temp < 70) {\r\n            if ((wind > 20 || gust > 20) && rh < 20) {\r\n                return 'moderate';\r\n            }\r\n\r\n            return 'low';\r\n        }\r\n\r\n        if (temp < 90) {\r\n            if ((wind > 20 || gust > 20) && rh < 20) {\r\n                return 'high';\r\n            }\r\n\r\n            if ((wind > 20 || gust > 20) || rh < 20) {\r\n                return 'moderate';\r\n            }\r\n\r\n            return 'low';\r\n        }\r\n\r\n        if ((wind > 20 || gust > 20) && rh < 20) {\r\n            return 'extreme';\r\n        }\r\n\r\n        if ((wind > 20 || gust > 20) || rh < 20) {\r\n            return 'high';\r\n        }\r\n\r\n        return 'moderate';\r\n    }\r\n\r\n    poll() {\r\n        fetch(`https://api.redsage.io/weather`)\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    this.setState({\r\n                        error: true,\r\n                        loading: false,\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                res.json().then(data => this.setState({\r\n                    error: false,\r\n                    loading: false,\r\n                    temp: data.data.tempF,\r\n                    wind: data.data.windMPH,\r\n                    rh: data.data.rh,\r\n                    time: moment(data.data.observationTime).calendar(),\r\n                    danger: data.data.danger,\r\n                }));\r\n            });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const {error, loading, temp, wind, rh, time, danger} = this.state;\r\n\r\n        if (error) {\r\n            return <Error/>\r\n        }\r\n\r\n        if (loading) {\r\n            return <Loading/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n                <ShadedBackground>\r\n                    <h3 className={'my-1'}>Danger: {danger}</h3>\r\n                </ShadedBackground>\r\n\r\n                <div className={'mt-4'}>\r\n                    <div className={'my-2'}>\r\n                        <ShadedBackground>\r\n                            <span>Temp: {temp}&deg;F</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                    <div className={'my-3'}>\r\n                        <ShadedBackground>\r\n                            <span>Wind: {wind} MPH</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                    <div className={'my-3'}>\r\n                        <ShadedBackground>\r\n                            <span className={'d-inline-block'}>RH: {rh}%</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={'mt-4'}>\r\n                    <ShadedBackground className={'w-100'}>\r\n                        <div className={' d-flex justify-content-between align-items-baseline'}>\r\n                            <h6 className={'my-1'}>\r\n                                Updated: {time}\r\n                            </h6>\r\n                            <h6 className={'small form-text text-muted'}>\r\n                                <a href={ this.state.curr_sta } target={'_blank'}>{this.state.curr_sign}</a>\r\n                            </h6>\r\n                        </div>\r\n                    </ShadedBackground>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Conditions;","import React, { Component } from 'react';\nimport Conditions from './components/Conditions';\n\nclass App extends Component {\n  render() {\n    return (\n      <div\n        style={ {\n          'height': '100vh',\n        } }>\n        <div\n          className=\"App\"\n          style={ {\n            'background': 'url(img/firewatch-tower.webp) no-repeat center center fixed',\n            'backgroundSize': 'cover',\n            'height': '100%',\n            'overflow': 'hidden',\n          } }>\n          <h1 className={'text-center mt-5'}>FireWeather</h1>\n          <div className={'mt-4 mx-5'}>\n            <Conditions/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap-css-only';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}