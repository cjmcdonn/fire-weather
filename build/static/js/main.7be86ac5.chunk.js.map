{"version":3,"sources":["components/Error.tsx","components/Loading.tsx","components/Conditions.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Error","react_default","a","createElement","Component","Loading","ShadedBackground","styled","div","_templateObject","Conditions","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","pollingInterval","state","error","loading","temp","wind","gust","rh","time","danger","home_lat","home_lon","curr_lat","curr_lon","curr_base","curr_sta","curr_sign","inherits","createClass","key","value","_this2","setLocation","pollDarkSky","setInterval","clearInterval","_this3","url","concat","fetch","then","resp","json","data","console","log","currently","moment","calendar","calcDanger","temperature","windSpeed","windGust","dewPoint","setState","Math","round","_this4","navigator","geolocation","getCurrentPosition","location","coords","latitude","longitude","_this5","res","status","tempF","windMPH","observationTime","_this$state","Error_Error","Loading_Loading","className","App","style","height","background","backgroundSize","overflow","components_Conditions","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7be86ac5.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Error extends Component {\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        <h1>Error!</h1>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport Error from './Error';\r\nimport Loading from './Loading';\r\nimport styled from 'styled-components';\r\n\r\nconst ShadedBackground = styled.div`\r\n  background-color: rgba(201, 211, 184, .75);\r\n  display: inline-block;\r\n  padding: .15rem .5rem;\r\n`;\r\n\r\ninterface State {\r\n    error: boolean,\r\n    loading: boolean,\r\n    temp: number,\r\n    wind: number,\r\n    gust: number,\r\n    rh: number,\r\n    time: string,\r\n    danger: string,\r\n    home_lat: number,\r\n    home_lon: number,\r\n    curr_lat: number,\r\n    curr_lon: number,\r\n    curr_base: object,\r\n    curr_sta: string,\r\n    curr_sign: string,\r\n}\r\n\r\nexport class Conditions extends Component<any, State> {\r\n    pollingInterval = 0;\r\n\r\n    constructor(props: State) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            error: false,\r\n            loading: true,\r\n            temp: -999,\r\n            wind: -999,\r\n            gust: -999,\r\n            rh: -999,\r\n            time: '',\r\n            danger: 'Invalid',\r\n            home_lat: 47.3126,\r\n            home_lon: -119.5352,\r\n            curr_lat: 47.3126,\r\n            curr_lon: -119.5352,\r\n            curr_base: {},\r\n            curr_sta: '',\r\n            curr_sign: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setLocation();\r\n        this.pollDarkSky();\r\n\r\n        this.pollingInterval = setInterval(() => {\r\n            this.setLocation();\r\n            this.pollDarkSky();\r\n        }, 300000);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        clearInterval(this.pollingInterval);\r\n        this.pollingInterval = 0;\r\n    }\r\n\r\n    pollDarkSky() {\r\n        const url = `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/bd610bdcefedaf54a0a095c8eba04bf5/${this.state.curr_lat},${this.state.curr_lon}`;\r\n        fetch (url)\r\n            .then(resp => resp.json()) // transform the data into json\r\n            .then(data => {\r\n                console.log(data.currently, moment(data.currently.time * 1000).calendar());\r\n                const danger = this.calcDanger(\r\n                    data.currently.temperature,\r\n                    data.currently.windSpeed,\r\n                    data.currently.windGust,\r\n                    data.currently.dewPoint\r\n                );\r\n\r\n                this.setState({\r\n                    temp: Math.round(data.currently.temperature),\r\n                    wind: Math.round(data.currently.windSpeed),\r\n                    gust: Math.round(data.currently.windGust),\r\n                    rh: Math.round(data.currently.dewPoint),\r\n                    time: moment(data.currently.time * 1000).calendar(),\r\n                    danger: danger,\r\n                    loading: false,\r\n                });\r\n\r\n            })\r\n    }\r\n\r\n    setLocation() {\r\n        navigator.geolocation.getCurrentPosition(location => {\r\n            this.setState({\r\n                curr_lat: (Math.round(location.coords.latitude * 10000)) / 10000,\r\n                curr_lon: (Math.round(location.coords.longitude * 10000)) / 10000,\r\n            })\r\n        });\r\n    }\r\n\r\n    calcDanger(temp: number, wind: number, gust: number, rh: number) {\r\n        if (temp < 70) {\r\n            if ((wind > 20 || gust > 20) && rh < 20) {\r\n                return 'moderate';\r\n            }\r\n\r\n            return 'low';\r\n        }\r\n\r\n        if (temp < 90) {\r\n            if ((wind > 20 || gust > 20) && rh < 20) {\r\n                return 'high';\r\n            }\r\n\r\n            if ((wind > 20 || gust > 20) || rh < 20) {\r\n                return 'moderate';\r\n            }\r\n\r\n            return 'low';\r\n        }\r\n\r\n        if ((wind > 20 || gust > 20) && rh < 20) {\r\n            return 'extreme';\r\n        }\r\n\r\n        if ((wind > 20 || gust > 20) || rh < 20) {\r\n            return 'high';\r\n        }\r\n\r\n        return 'moderate';\r\n    }\r\n\r\n    poll() {\r\n        fetch(`https://api.redsage.io/weather`)\r\n            .then(res => {\r\n                if (res.status !== 200) {\r\n                    this.setState({\r\n                        error: true,\r\n                        loading: false,\r\n                    });\r\n                    return;\r\n                }\r\n\r\n                res.json().then(data => this.setState({\r\n                    error: false,\r\n                    loading: false,\r\n                    temp: data.data.tempF,\r\n                    wind: data.data.windMPH,\r\n                    rh: data.data.rh,\r\n                    time: moment(data.data.observationTime).calendar(),\r\n                    danger: data.data.danger,\r\n                }));\r\n            });\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n        const {error, loading, temp, wind, gust, rh, time, danger, curr_lat, curr_lon} = this.state;\r\n\r\n        if (error) {\r\n            return <Error/>\r\n        }\r\n\r\n        if (loading) {\r\n            return <Loading/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n\r\n                <ShadedBackground>\r\n                    <h3 className={'my-1'}>Danger: {danger}</h3>\r\n                </ShadedBackground>\r\n\r\n                <div className={'mt-4'}>\r\n                    <div className={'my-2'}>\r\n                        <ShadedBackground>\r\n                            <span>Temp: {temp}&deg;F</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                    <div className={'my-3'}>\r\n                        <ShadedBackground>\r\n                            <span>Wind: {wind} MPH</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                    <div className={'my-3'}>\r\n                        <ShadedBackground>\r\n                            <span>Gust: {gust} MPH</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                    <div className={'my-3'}>\r\n                        <ShadedBackground>\r\n                            <span className={'d-inline-block'}>RH: {rh}%</span>\r\n                        </ShadedBackground>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className={'mt-4'}>\r\n                    <ShadedBackground className={'w-100'}>\r\n                            <h6 className={'my-1'}>\r\n                                Updated: {time}\r\n                            </h6>\r\n                            <h6 className={'small form-text text-muted text-right'}>\r\n                                {curr_lat},{curr_lon}\r\n                            </h6>\r\n                    </ShadedBackground>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Conditions;","import React, { Component } from 'react';\nimport Conditions from './components/Conditions';\n\nclass App extends Component {\n  render() {\n    return (\n      <div\n        style={ {\n          'height': '100vh',\n        } }>\n        <div\n          className=\"App\"\n          style={ {\n            'background': 'url(img/firewatch-tower.webp) no-repeat center center fixed',\n            'backgroundSize': 'cover',\n            'height': '100%',\n            'overflow': 'hidden',\n          } }>\n          <h1 className={'text-center mt-5'}>FireWeather</h1>\n          <div className={'mt-4 mx-5'}>\n            <Conditions/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap-css-only';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}